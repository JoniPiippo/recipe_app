// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  password    String
  recipes     Recipe[]
  followers   Follower[] @relation("UserFollowers")
  following   Follower[] @relation("UserFollowing")
  comments    Comment[]
  ratings     Rating[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Recipe {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  ingredients String
  steps       String
  category    String
  image       String?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  comments    Comment[]
  ratings     Rating[]
  createdAt   DateTime  @default(now())
}

model Follower {
  id           Int   @id @default(autoincrement())
  follower     User  @relation("UserFollowers", fields: [followerId], references: [id])
  followerId   Int
  following    User  @relation("UserFollowing", fields: [followingId], references: [id])
  followingId  Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Rating {
  id        Int      @id @default(autoincrement())
  value     Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}